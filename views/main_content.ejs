<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Head content remains the same -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Main Page</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="icon" type="image/x-icon" href="/imgs/favicon.ico">

</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="sidebar">
                <ul class="sidebar-menu">
                    <li><img src="/imgs/logo.png" alt="Logo" class="logo" /></li>
                    <li><a href="#"><i class="fa-solid fa-house"></i></a></li>
                    <li><a href="/users/<%= currentUsername %>"><i class="fa-solid fa-user"></i></a></li>
                    <li><a href="mailto:ellentomlins2026@u.northwestern.edu"><i class="fa-solid fa-envelope"></i></a></li>
                </ul>
            </div>
            
            <div class="col-md-10">
                <!-- Top Navigation -->
                <div class="container-fluid p-0 m-0">
                    <span class="d-block">
                        <ul class="nav justify-content-center align-items-center">
                            <li class="nav-item">
                                <a href="/tweets" class="nav-link active">for you</a>
                            </li>
                            <li class="nav-item">
                                <a href="/tweets" class="nav-link">following</a>
                            </li>
                        </ul>
                    </span>
                </div>
                
                <div class="main-content" >
                    <form class="new-post" id="tweet-form">
                        <img src="/imgs/prof_pics/profile-pic-1.png" alt="Profile Picture" class="profile-pic" />
                        <textarea
                            name="content"
                            class="post-input form-control-plaintext"
                            id="tweet-input"
                            required
                            rows="2"
                        ></textarea>
                        <button type="submit" class="post-button">Post</button>
                    </form>

        <div class="container-fluid p-0" id="posts-container">
            <% if (posts && posts.length > 0) { %>
                <% posts.forEach(function(post) { %>
                    <div class="card border-0  ">
                        <div class="card-body">
                        <div class="post-header">
                            <img src="" alt="Profile Picture" class="profile-pic" />
                            <h2 class="username">
                                <a href="/users/<%= post.authorId.username %>" style="color:white">
                                    <%= post.authorId.username %>
                                </a>
                            </h2>
                        </div>
                            <p class="card-text m-0"><%= post.content %></p>
                        <div class="tweet-actions">
                            <button class="like-button <%= post.likedByUser ? 'liked' : '' %>" 
                                data-tweet-id="<%= post.id %>" data-user-id="<%= userId %>">
                                <i class="fas fa-heart"></i> 
                                <span class="like-count"><%= post.likecount %></span>
                            </button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p class="text-muted text-center">No posts to display.</p>
            <% } %>
        </div>

        
        <div class="modal fade" id="tweetModal" tabindex="-1" aria-labelledby="tweetModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content tweet-modal-content">
                    <div class="modal-header border-0">
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body modal-body-tweet">
                        <div class="tweet-header d-flex align-items-center mb-3">
                            <img src="" id="modal-profile-pic" class="modal-profile-pic" alt="Profile Picture" />
                            <h2 id="modal-username" class="username ms-3 mb-0"></h2>
                        </div>
                        <p id="modal-tweet-content" class="card-text tweet-content"></p>
                    </div>
                </div>
            </div>
        </div>
                
    </div>
</div>
</div>


    <script>
        const profilePics = [
            '/imgs/prof_pics/profile-pic-1.png',
            '/imgs/prof_pics/profile-pic-2.png',
            '/imgs/prof_pics/profile-pic-3.png',
            '/imgs/prof_pics/profile-pic-4.png'
        ];

        function assignRandomProfilePics() {
            const profilePicsElements = document.querySelectorAll('.profile-pic');
            profilePicsElements.forEach(img => {
                const randomPic = profilePics[Math.floor(Math.random() * profilePics.length)];
                img.src = randomPic;
            });
        }
        document.getElementById('posts-container').addEventListener('click', (event) => {
            console.log('Click detected on posts-container');

            const tweetCard = event.target.closest('.card'); 
            if (!tweetCard) {
                console.log('No card found');
                return;
            }

            console.log('Card clicked:', tweetCard);

            if (event.target.closest('.tweet-actions')) {
                console.log('Clicked inside tweet actions, ignoring');
                return;
            }

            const username = tweetCard.querySelector('.username a').textContent;
            const content = tweetCard.querySelector('.card-text').textContent;
            const profilePicSrc = tweetCard.querySelector('.profile-pic').src;

            console.log('Username:', username, 'Content:', content);

            document.getElementById('modal-username').textContent = username;
            document.getElementById('modal-tweet-content').textContent = content;
            document.getElementById('modal-profile-pic').src = profilePicSrc;

            const tweetModal = new bootstrap.Modal(document.getElementById('tweetModal'));
            console.log('Showing modal');
            tweetModal.show();
        });

        document.addEventListener('DOMContentLoaded', assignRandomProfilePics);

        const username = "<%= currentUsername %>"; 
        const text = `${username}, what's not happening?`;
        const textarea = document.getElementById('tweet-input');
        let index = 0;

        function typeWriter() {
            if (index < text.length) {
                textarea.setAttribute('placeholder', text.substring(0, index + 1));
                index++;
                setTimeout(typeWriter, 100); 
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            typeWriter();
        });

        document.querySelectorAll('.like-button').forEach(button => {
            button.addEventListener('click', async () => {
                const tweetId = button.getAttribute('data-tweet-id');

                const likeCountSpan = button.querySelector('.like-count');
                let currentLikes = parseInt(likeCountSpan.textContent) || 0;

                const heartIcon = button.querySelector('i');
                const liked = heartIcon.classList.contains('liked');
                likeCountSpan.textContent = liked ? currentLikes - 1 : currentLikes + 1;
                heartIcon.classList.toggle('liked');

                try {
                    const response = await fetch(`/tweets/${tweetId}/likes`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        credentials: 'include', 
                    });

                    if (!response.ok) {
                        console.error('Failed to like tweet:', response.statusText);
                        likeCountSpan.textContent = liked ? currentLikes : currentLikes - 1;
                        heartIcon.classList.toggle('liked');
                    }
                } catch (error) {
                    console.error('Error liking tweet:', error);

                    likeCountSpan.textContent = liked ? currentLikes : currentLikes - 1;
                    heartIcon.classList.toggle('liked');
                }
            });
        });
        function attachLikeButtonEvent(button) {
                button.addEventListener('click', async () => {
                    const tweetId = button.getAttribute('data-tweet-id');
                    const likeCountSpan = button.querySelector('.like-count');
                    let currentLikes = parseInt(likeCountSpan.textContent) || 0;

                    console.log(`Liking tweet ID: ${tweetId}`); 

                    const heartIcon = button.querySelector('i');
                    const liked = heartIcon.classList.contains('liked');

                    likeCountSpan.textContent = liked ? currentLikes - 1 : currentLikes + 1;
                    heartIcon.classList.toggle('liked');

                    try {
                        const response = await fetch(`/tweets/${tweetId}/likes`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            credentials: 'include',
                        });

                        if (!response.ok) {
                            console.error('Failed to like tweet:', response.statusText);
                            likeCountSpan.textContent = liked ? currentLikes : currentLikes - 1;
                            heartIcon.classList.toggle('liked');
                        }
                    } catch (error) {
                        console.error('Error liking tweet:', error);
                        likeCountSpan.textContent = liked ? currentLikes : currentLikes - 1;
                        heartIcon.classList.toggle('liked');
                    }
                });
            }

            function attachLikeEvents() {
                const likeButtons = document.querySelectorAll('.like-button');
                likeButtons.forEach(button => attachLikeButtonEvent(button));
            }

            document.getElementById('tweet-form').addEventListener('submit', async (event) => {
                event.preventDefault();
                const content = document.getElementById('tweet-input').value;

                try {
                    const response = await fetch('/tweets', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ content }),
                        credentials: 'include',
                    });

                    if (response.ok) {
                        const newTweet = await response.json();
                        const tweetsContainer = document.getElementById('posts-container');
                        const randomPic = profilePics[Math.floor(Math.random() * profilePics.length)];

                        const newTweetHtml = `
                            <div class="card border-0">
                                <div class="card-body">
                                    <div class="post-header d-flex align-items-center mb-2">
                                        <img src="${randomPic}" alt="Profile Picture" class="profile-pic" />
                                        <h2 class="username ms-3">
                                            <a href="/users/${newTweet.the_username}" style="color:white;">
                                                ${newTweet.the_username}
                                            </a>
                                        </h2>
                                    </div>
                                    <p class="card-text">${newTweet.content}</p>
                                    <div class="tweet-actions d-flex justify-content-start align-items-center mt-2">
                                        <button class="like-button" data-tweet-id="${newTweet.id}">
                                            <i class="fas fa-heart"></i>
                                            <span class="like-count">0</span>
                                        </button>
                                        <button class="retweet-button ms-3">
                                            <i class="fas fa-retweet"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `;

                        tweetsContainer.insertAdjacentHTML('afterbegin', newTweetHtml);

                        const newLikeButton = tweetsContainer.querySelector('.like-button');
                        attachLikeButtonEvent(newLikeButton);

                        document.getElementById('tweet-input').value = '';
                    } else {
                        console.error('Failed to post tweet');
                    }
                } catch (error) {
                    console.error('Error posting tweet:', error);
                }
            });


            document.getElementById('posts-container').addEventListener('click', (event) => {
                console.log('Click detected on posts-container'); 

                const tweetCard = event.target.closest('.card'); 
                if (!tweetCard) {
                    console.log('No card found'); 
                    return;
                }

                console.log('Card clicked:', tweetCard); 

                if (event.target.closest('.tweet-actions')) {
                    console.log('Clicked inside tweet actions, ignoring');
                    return;
                }

                const username = tweetCard.querySelector('.username a').textContent;
                const content = tweetCard.querySelector('.card-text').textContent;
                const profilePicSrc = tweetCard.querySelector('.profile-pic').src;
                const tweetId = tweetCard.querySelector('.like-button').getAttribute('data-tweet-id'); 

                console.log('Username:', username, 'Content:', content, 'Tweet ID:', tweetId);

                document.getElementById('modal-username').textContent = username;
                document.getElementById('modal-tweet-content').textContent = content;
                document.getElementById('modal-profile-pic').src = profilePicSrc;

                const modalLikeButton = document.querySelector('.like-button-modal');
                modalLikeButton.setAttribute('data-tweet-id', tweetId);

                const tweetModal = new bootstrap.Modal(document.getElementById('tweetModal'));
                console.log('Showing modal');
                tweetModal.show();
            });
            




    </script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        
</body>
</html>
